/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id("java-shared")

    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.github.johnrengelman.shadow")

    id("com.github.davidmc24.gradle.plugin.avro")
    id("com.google.cloud.tools.jib")
}

dependencies {
   implementation("org.apache.avro:avro:1.11.0")
}

tasks.build {
    dependsOn("shadowJar")
    dependsOn("generateAvroJava")
}


task("runApp", JavaExec::class){
    //reading gradle command arguments
    val propsFile = properties["cfg"] ?: "$buildDir/resources/main/client.properties"
    val classUsed = properties["javaClass"] ?: "App"
    println("Properties file used: $propsFile")
    println("Project: ${project.displayName} " +
            "Class: $classUsed")

    group = "custom"
    description = "Run the main class with arguments"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("kstreams.playground.app.$classUsed")
    args = listOf(propsFile as String)
}

jib {
    from {
        image = "eclipse-temurin:17"
        platforms {
            platform {
                os = "linux"
                architecture = "amd64"
            }
        }
    }
    container {
        jvmFlags = listOf("-Xms64M", "-Xmx128M")
    }
    //Copying the config files
    extraDirectories {
        setPaths("src/main/resources")
    }
}
